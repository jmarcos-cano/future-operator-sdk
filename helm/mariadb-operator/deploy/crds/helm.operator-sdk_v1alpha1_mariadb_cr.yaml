apiVersion: helm.operator-sdk/v1alpha1
kind: Mariadb
metadata:
  name: example-mariadb
spec:
  # Default values copied from <project_dir>/helm-charts/mariadb/values.yaml
  
  db:
    forcePassword: false
    injectSecretsAsVolume: false
    name: my_database
    password: ""
    user: ""
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.3.23-debian-10-r0
  master:
    affinity: {}
    antiAffinity: soft
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
  
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    extraEnvVars: null
    extraEnvVarsCM: null
    extraEnvVarsSecret: null
    extraInitContainers: []
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      mountPath: /bitnami/mariadb
      size: 8Gi
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    service:
      annotations: {}
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  metrics:
    annotations:
      prometheus.io/port: "9104"
      prometheus.io/scrape: "true"
    enabled: false
    extraArgs:
      master: []
      slave: []
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/mysqld-exporter
      tag: 0.12.1-debian-10-r106
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    serviceMonitor:
      enabled: false
      selector:
        prometheus: kube-prometheus
  rbac:
    create: false
  replication:
    enabled: true
    forcePassword: false
    injectSecretsAsVolume: false
    password: ""
    user: replicator
  rootUser:
    forcePassword: false
    injectSecretsAsVolume: false
    password: ""
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  service:
    port: 3306
    type: ClusterIP
  serviceAccount:
    create: false
  slave:
    affinity: {}
    antiAffinity: soft
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
  
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    extraEnvVars: null
    extraEnvVarsCM: null
    extraEnvVarsSecret: null
    extraInitContainers: null
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: null
      enabled: true
      size: 8Gi
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 45
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    replicas: 1
    resources: {}
    service:
      annotations: {}
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  tests:
    enabled: true
    resources: {}
    testFramework:
      image:
        registry: docker.io
        repository: dduportal/bats
        tag: 0.4.0
      resources: {}
  volumePermissions:
    enabled: false
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
    resources: {}
  
